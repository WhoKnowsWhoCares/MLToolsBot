name: Deploy by Runner

on:
  workflow_run:
    workflows: ["Tests", "Docker Build"]
    branches: ["prod"]
    types:
      - completed

env:
  ENV_FILE: prod.env

jobs:
  prepare-environment:
    runs-on: self-hosted
    steps:
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files: "docker-compose.yml"
      - name: Stop containers
        if: steps.check_files.outputs.files_exists == 'true'
        run: docker compose down
      - name: Remove unused data
        run: docker system prune -a -f
      - name: Cleanup build folder
        run: |
          rm -rf ./* || true

  deploy:
    runs-on: self-hosted
    needs: prepare-environment
    steps:
      - name: Create docker-compose
        run: |
          touch docker-compose.yml
          echo -e "services: " >> docker-compose.yml
          echo -e "  MLToolsBot: " >> docker-compose.yml
          echo -e "    container_name: mltoolsbot" >> docker-compose.yml
          echo -e "    image: registry.frants.site/mltoolsbot:latest" >> docker-compose.yml
          echo -e "    restart: always" >> docker-compose.yml
          echo -e "    env_file: ${{ env.ENV_FILE }}" >> docker-compose.yml
      - name: Create env file
        run: |
          touch ${{ env.ENV_FILE }}
          echo BOT_TOKEN=${{ secrets.BOT_TOKEN }} >> ${{ env.ENV_FILE }}
          echo CHAT_ID=${{ secrets.CHAT_ID }} >> ${{ env.ENV_FILE }}
          echo SD_SERVER_URL=${{ secrets.SD_SERVER_URL }} >> ${{ env.ENV_FILE }}
          echo LLM_SERVER_URL=${{ secrets.LLM_SERVER_URL }} >> ${{ env.ENV_FILE }}
      - name: Run docker-compose
        run: docker compose up -d
